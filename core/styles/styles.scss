@charset "utf-8";
@import "../../node_modules/bulma/bulma.sass";
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;400&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@200;400;700&display=swap');

// color pallete
$primary: #0A3871;
$secondary: #f3f5fc;

$box-shadow: 0px 24px 32px -8px #00000014;

// Overriding values
$dark-blue: $primary;
$background-color: $secondary;
$danger: #ca303070;
$family-primary: 'Inter';

$base-radius: 0.5;
$border-radius: (
);

@for $i from 1 through 4 {
  $border-radius: map-merge($border-radius, ($i: #{$i * $base-radius}em));
}

html {
  background-color: $background-color;
  height: 100%;
}

body {
  height: 100%;
}

textarea::placeholder {
  color: $primary;
  opacity: 1;
  border: none;
  font-family: $family-primary;
}

* {
  font-family: $family-primary;
  box-sizing: border-box;
}

header {
  box-shadow: $box-shadow;
}

button {
  padding: 1.5em;
  outline: none;
  border-radius: map-get($border-radius, 3);
  cursor: pointer;
  border: 1px $primary solid;
  background-color: transparent;
  width: 25%;
  min-width: 220px;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

main {
  gap: 1em;
  height: calc(100% - 961px + 880px);
}

textarea {
  overflow: auto;
  resize: none;
  outline: none;
  border: none;
  border-radius: map-get($border-radius, 1);
}

.section {
  position: relative;
  flex-basis: fit-content;
  flex-basis: 49%;
  padding: unset;

  &__button-translate {
    position: absolute;
    left: -40px;
    top: 50%;
    cursor: pointer;
    border: $primary solid 1px;
    border-radius: map-get($border-radius, 2);
    padding: 0 1em;
    background-color: $primary;
    color: $secondary;

    &::before {
      content: "<--"
    }
  }

  &-output {
    flex-shrink: 2;
    flex-basis: 250px;
    justify-content: center;
    align-items: center;
    text-align: center;

    img[alt="guy-searching"] {
      max-width: 100%;
      height: auto;
    }

    background-color: $white;
    border-radius: map-get($border-radius, 2);
    box-shadow: $box-shadow;

    &__text {
      flex-basis: 500px;

      :read-only {
        color: $grey-dark;
      }
    }
  }

  &__message-output {
    height: 100%;

    button {
      width: 100%;
      margin: 0;
    }
  }
}

form {
  position: relative;
  display: flex;
  flex-direction: column;
  margin: auto;
  min-width: 320px;
  height: 100%;

  textarea {
    min-height: 500px;
    height: 100%;
    width: 100%;
    min-width: 320px;
    margin: 0 auto;
    background-color: transparent;
    padding: 1em;
    color: $primary;
  }

  .buttons-container {
    gap: 0.5em;

    button {
      width: 25%;
      background-color: $dark-blue;
      color: $white;
      transition: opacity 0.25s ease-in-out;
      display: inline-block;
      border: none;
    }
  }

  label {
    position: relative;
    width: 80px;
    padding: 0.25em 0.5em;
    border-radius: map-get($border-radius, 2);
    box-shadow: inset 2px 4px 3px 0px #00000014;
    border: 1px solid #00000014;
    box-sizing: border-box;

    $button: "button#action-button";

    &::before {
      content: '';
      position: relative;
      display: block;
      border-radius: 50%;
      background-color: $primary;
      width: 1em;
      height: 1em;
      transition: transform 0.25s ease-in-out;
    }

    &:has(+ input[type="checkbox"]:not(:checked))::before {
      transform: translateX(48px);
    }

    &+input[type="checkbox"] {
      display: none;
      cursor: pointer;

      &+#{$button} {
        transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out;
      }

      &:checked+#{$button}::before {
        content: "En";
      }

      &:not(:checked)+#{$button} {
        background-color: transparent;
        color: $primary;
        outline: 1px $primary solid;

        &::before {
          content: "De";
        }
      }
    }
  }
}

.error {
  border: solid $danger 2px;
}

.tooltip {
  position: absolute;
  top: -6em;
  right: 0;
  margin: 2em;
  transform: rotate(-50%);
  background-color: rgba(118, 111, 111, 0.4);
  padding: 0.5em;
  border-radius: map-get($border-radius, 1);
  box-shadow: $box-shadow;
  z-index: 1;
  opacity: 0;
  animation: fade-in-out 4s ease-in-out forwards;
}

@media (max-width: 740px) {
  .section {
    &__button-translate {
      position: relative;
      top: 0;
      left: 0;
      margin: 0 auto;

      &::before {
        content: "^"
      }
    }

    &-output {
      img[alt="guy-searching"] {
        display: none;
      }
    }
  }
}

@import './animation';
